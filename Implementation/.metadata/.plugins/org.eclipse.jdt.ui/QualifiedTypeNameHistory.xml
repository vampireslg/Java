<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="java.lang.System"/>
<fullyQualifiedTypeName name="circularArray.UnboundedDEQueue"/>
<fullyQualifiedTypeName name="print.Print"/>
<fullyQualifiedTypeName name="java.security.PublicKey"/>
<fullyQualifiedTypeName name="UnboundedDEQueue"/>
<fullyQualifiedTypeName name="java.util.Random"/>
<fullyQualifiedTypeName name="java.lang.Thread"/>
<fullyQualifiedTypeName name="java.util.AbstractSequentialList"/>
<fullyQualifiedTypeName name="java.util.Deque"/>
<fullyQualifiedTypeName name="java.util.Collection"/>
<fullyQualifiedTypeName name="java.lang.Cloneable"/>
<fullyQualifiedTypeName name="java.lang.LinkageError"/>
<fullyQualifiedTypeName name="java.lang.Runnable"/>
<fullyQualifiedTypeName name="javax.sound.sampled.ReverbType"/>
<fullyQualifiedTypeName name="concurrentStructure.RemoveVSGet"/>
<fullyQualifiedTypeName name="java.util.NoSuchElementException"/>
<fullyQualifiedTypeName name="java.util.concurrent.atomic.AtomicReferenceArray"/>
<fullyQualifiedTypeName name="java.lang.SafeVarargs"/>
<fullyQualifiedTypeName name="java.util.concurrent.atomic.AtomicBoolean"/>
<fullyQualifiedTypeName name="java.util.concurrent.atomic.AtomicInteger"/>
<fullyQualifiedTypeName name="concurrentStructure.IsGetFirstAtomical"/>
<fullyQualifiedTypeName name="javax.xml.soap.Node"/>
<fullyQualifiedTypeName name="java.lang.NegativeArraySizeException"/>
<fullyQualifiedTypeName name="java.util.Collections"/>
<fullyQualifiedTypeName name="concurrentQueue.ConcurrentLinkedListQueue"/>
<fullyQualifiedTypeName name="java.util.concurrent.atomic.AtomicReference"/>
<fullyQualifiedTypeName name="javax.swing.text.html.HTMLDocument.Iterator"/>
<fullyQualifiedTypeName name="sortAlgo.SortWithPatialOrder"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="java.util.Arrays"/>
<fullyQualifiedTypeName name="javax.swing.event.AncestorEvent"/>
<fullyQualifiedTypeName name="java.lang.InterruptedException"/>
<fullyQualifiedTypeName name="java.lang.reflect.Array"/>
<fullyQualifiedTypeName name="java.util.ArrayList"/>
<fullyQualifiedTypeName name="java.util.prefs.BackingStoreException"/>
<fullyQualifiedTypeName name="java.io.ByteArrayOutputStream"/>
<fullyQualifiedTypeName name="java.lang.Object"/>
<fullyQualifiedTypeName name="java.io.ObjectOutputStream"/>
<fullyQualifiedTypeName name="java.io.ByteArrayInputStream"/>
<fullyQualifiedTypeName name="java.io.ObjectInputStream"/>
<fullyQualifiedTypeName name="sortAlgo.GetCloneObject"/>
<fullyQualifiedTypeName name="sortAlgo.Tuple"/>
<fullyQualifiedTypeName name="sortAlgo.MethodsProducer"/>
<fullyQualifiedTypeName name="java.lang.Integer"/>
<fullyQualifiedTypeName name="smartalgorithm.CriticalPath"/>
<fullyQualifiedTypeName name="java.io.FileReader"/>
<fullyQualifiedTypeName name="java.io.BufferedReader"/>
<fullyQualifiedTypeName name="java.lang.Exception"/>
<fullyQualifiedTypeName name="java.lang.Readable"/>
<fullyQualifiedTypeName name="smartalgorithm.ReadData"/>
<fullyQualifiedTypeName name="smartalgorithm.FilterSort"/>
<fullyQualifiedTypeName name="java.util.LinkedList"/>
</qualifiedTypeNameHistroy>
